{"version":3,"sources":["GenericError.ts"],"names":["GenericError","Error","constructor","message","code","Object","setPrototypeOf","prototype","name"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,YAAN,SAA2BC,KAA3B,CAAiC;AAGtCC,EAAAA,WAAW,CAACC,OAAD,EAAkBC,IAAlB,EAAiC;AAC1C,UAAMD,OAAN;;AAD0C;;AAG1C,SAAKC,IAAL,GAAYA,IAAZ;AAEAC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BN,YAAY,CAACO,SAAzC;AACA,SAAKC,IAAL,GAAYR,YAAY,CAACQ,IAAzB;AACD;;AAVqC","sourcesContent":["/**\n * Generic error that the SDK will raise when encountering an error. Can be\n * used to describe backend errors.\n *\n * @public\n */\nexport class GenericError extends Error {\n  code: number | undefined;\n\n  constructor(message: string, code?: number) {\n    super(message);\n\n    this.code = code;\n\n    Object.setPrototypeOf(this, GenericError.prototype);\n    this.name = GenericError.name;\n  }\n}\n"]}